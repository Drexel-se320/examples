plugins {
    id 'java'
    id 'jacoco'
    id "com.github.spotbugs" version "4.5.1"

}

repositories {
    mavenCentral()
}

dependencies {
    // Guava for contracts
    implementation 'com.google.guava:guava:29.0-jre'
    // Apache Commons for silly things like pairs
    implementation 'org.apache.commons:commons-lang3:3.11'

    // jqwik for property-based testing
    testImplementation "net.jqwik:jqwik:1.3.5"

    // Hamcrest matchers
    testImplementation 'org.hamcrest:hamcrest:2.2'
    
    // JUnit for tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"

    // Selenium
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.14.0'  

    // Security bugs plugin for SpotBugs
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
}

test {
    useJUnitPlatform {
        includeEngines 'jqwik', 'junit-jupiter'
    }
    //include '**/*Properties.class'
    //include '**/*Test.class'
    //include '**/*Tests.class'
    testLogging {
        events "passed", "skipped", "failed"
	exceptionFormat "short"
    }
}
compileTestJava {
	options.compilerArgs += '-parameters'
	options.encoding = 'UTF-8'
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("${buildDir}/reports/coverage")
}
// This task only runs if 'test' has already run, i.e., "gradle test jacocoTestReport"
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
}

tasks.withType(Test) {
    // Enable assertions (-ea) for tests
    enableAssertions = true
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
